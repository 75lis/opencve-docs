{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is OpenCVE OpenCVE is a platform used to locally import the list of CVEs and perform searches on it (by vendors, products, CVSS, CWE...). Users subscribe to vendors or products, and OpenCVE alerts them when a new CVE is created or when an update is done in an existing CVE. You can manually install OpenCVE, or use docker . We also provide a running instance on https://www.opencve.io if you don't want to host it yourself. How it works OpenCVE uses the JSON feed provided by the NVD to update the local list of CVEs. After an initial import, a background task is regularly executed to synchronize the local copy with the NVD feed. If a new CVE is added, or if a change is detected, the subscribers of the related vendors and products are alerted. Info For now the only method of notification is the mail, but we plan to add other integrations (webhooks, Slack, Jira, PagerDuty, OpsGenie...). Requirements OpenCVE works with Python >=3.6 . It uses the JSONB feature for performance, so you will need a PostgreSQL instance to store the data (CVE, Users, Vendors, Products, Subscriptions, ...). Other engines are not supported. Celery is used to periodically fetch the NVD database and update the list of CVEs. For that you will need a broker : we recommend you Redis for the ease of installation. Futhermore it is possible that future versions of OpenCVE will use a cache feature, in that case the Redis requirement will already be filled for you. During the import of initial data OpenCVE will download and parse huge files, like the CPE dictionnary. For that we recommend you 3.5G RAM at least. Installation We provide 2 methods to install OpenCVE : manual installation docker installation The second method can be useful if you don't want to manage the dependencies (like PostgreSQL, Redis or Celery). Check these documentations for the details of each step (initial import, admin creation, etc).","title":"Home"},{"location":"#_1","text":"","title":""},{"location":"#what-is-opencve","text":"OpenCVE is a platform used to locally import the list of CVEs and perform searches on it (by vendors, products, CVSS, CWE...). Users subscribe to vendors or products, and OpenCVE alerts them when a new CVE is created or when an update is done in an existing CVE. You can manually install OpenCVE, or use docker . We also provide a running instance on https://www.opencve.io if you don't want to host it yourself.","title":"What is OpenCVE"},{"location":"#how-it-works","text":"OpenCVE uses the JSON feed provided by the NVD to update the local list of CVEs. After an initial import, a background task is regularly executed to synchronize the local copy with the NVD feed. If a new CVE is added, or if a change is detected, the subscribers of the related vendors and products are alerted. Info For now the only method of notification is the mail, but we plan to add other integrations (webhooks, Slack, Jira, PagerDuty, OpsGenie...).","title":"How it works"},{"location":"#requirements","text":"OpenCVE works with Python >=3.6 . It uses the JSONB feature for performance, so you will need a PostgreSQL instance to store the data (CVE, Users, Vendors, Products, Subscriptions, ...). Other engines are not supported. Celery is used to periodically fetch the NVD database and update the list of CVEs. For that you will need a broker : we recommend you Redis for the ease of installation. Futhermore it is possible that future versions of OpenCVE will use a cache feature, in that case the Redis requirement will already be filled for you. During the import of initial data OpenCVE will download and parse huge files, like the CPE dictionnary. For that we recommend you 3.5G RAM at least.","title":"Requirements"},{"location":"#installation","text":"We provide 2 methods to install OpenCVE : manual installation docker installation The second method can be useful if you don't want to manage the dependencies (like PostgreSQL, Redis or Celery). Check these documentations for the details of each step (initial import, admin creation, etc).","title":"Installation"},{"location":"admin/","text":"OpenCVE includes an admin section, useful to manage your instance data. The admin panel is available at https://your_instance/admin . Display Statistics The homepage displays some global statistics : number of users number of CVEs number of reports number of vendors and products the date of the last task (to synchronize the data) the top vendors, products and reports per user the number of registered users per day, month or current week Manage Objects OpenCVE uses Flask-Admin to let you list and display the following objects : Users CVEs Events Vendors Products For some of them, like the users, vendors and products, it's also possible to create and update the items: CVEs changes When the NVD updates some CVEs, a new JSON file containing the changes is published. OpenCVE regularly parse this file and create a task containing changes. A change is linked to a CVE and is composed of events: You can then display the visual diff of each change:","title":"Admin"},{"location":"admin/#display-statistics","text":"The homepage displays some global statistics : number of users number of CVEs number of reports number of vendors and products the date of the last task (to synchronize the data) the top vendors, products and reports per user the number of registered users per day, month or current week","title":"Display Statistics"},{"location":"admin/#manage-objects","text":"OpenCVE uses Flask-Admin to let you list and display the following objects : Users CVEs Events Vendors Products For some of them, like the users, vendors and products, it's also possible to create and update the items:","title":"Manage Objects"},{"location":"admin/#cves-changes","text":"When the NVD updates some CVEs, a new JSON file containing the changes is published. OpenCVE regularly parse this file and create a task containing changes. A change is linked to a CVE and is composed of events: You can then display the visual diff of each change:","title":"CVEs changes"},{"location":"commands/","text":"celery worker The worker is the component that synchronize the local database : $ opencve celery worker --loglevel=INFO Tip You can start the worker as a background process with the --detach option. The whole list of Celery's options can be displayed with the opencve celery worker -- --help command. celery beat The scheduler is the component used to periodically kicks off tasks consumed by the worker. Use the following command to start it : $ opencve celery beat --loglevel=INFO The interval is set to 15 minutes . Tip You can start the worker as a background process with the -D or --detach option. The whole list of Celery's options can be displayed with the opencve celery beat -- --help command. create-user OpenCVE users can be managed throught the CLI, using the create-user command : $ opencve create-user john john@example.com Password: Repeat for confirmation: [*] User john created. This is mandatory to create the very first admin : $ opencve create-user admin admin@example.com --admin Password: Repeat for confirmation: [*] User admin created. Note The CLI is only mandatory for the first admin, then you will be able to manage the users with the admin pages . import-data This command is used once, during OpenCVE installation, to populate the local database with all CVEs, CWEs, vendors and products : $ opencve import-data The following files are downloaded during the process : https://nvd.nist.gov/feeds/xml/cpe/dictionary/official-cpe-dictionary_v2.3.xml.gz https://cwe.mitre.org/data/xml/cwec_latest.xml.zip https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-{year}.json.gz Warning Because uncompressed files are parsed in memory, you must have enough RAM to handle the command. We wrote a dedicated section in the FAQ to use the disk space instead. init The init command is used to generate the OpenCVE's configuration file : $ opencve init [*] Configuration created in /Users/ncrocfer/opencve/opencve.cfg You can specify the target folder using the OPENCVE_HOME environment variable : $ export OPENCVE_HOME=\"/tmp/\" $ opencve init [*] Configuration created in /tmp/opencve.cfg You can also directly specify the configuration file with the OPENCVE_CONFIG : $ export OPENCVE_CONFIG=\"/tmp/config.cfg\" $ opencve init [*] Configuration created in /tmp/config.cfg upgrade-db This command handles the database operations, like tables and indexes creations : $ opencve upgrade-db Info You have to execute it during the installation process, but we also recommend you to launch it each time you upgrade OpenCVE, to automatically upgrade the database schema if needed. webserver OpenCVE uses Gunicorn to handle the webserver : $ opencve webserver [2021-03-25 17:10:05 +0100] [29464] [INFO] Starting gunicorn 20.0.4 [2021-03-25 17:10:05 +0100] [29464] [INFO] Listening at: http://127.0.0.1:8000 (29464) [2021-03-25 17:10:05 +0100] [29464] [INFO] Using worker: sync [2021-03-25 17:10:05 +0100] [29470] [INFO] Booting worker with pid: 29470 You can find the list of options in Gunicorn's official documentation . For example the -b option can be used to bind another port : $ opencve webserver -b 0.0.0.0:8888 ... [2021-03-25 17:11:04 +0100] [29511] [INFO] Listening at: http://0.0.0.0:8080 (29511) ... Note Change the webserver's binding implies to also change the server_name configuration.","title":"Commands"},{"location":"commands/#celery-worker","text":"The worker is the component that synchronize the local database : $ opencve celery worker --loglevel=INFO Tip You can start the worker as a background process with the --detach option. The whole list of Celery's options can be displayed with the opencve celery worker -- --help command.","title":"celery worker"},{"location":"commands/#celery-beat","text":"The scheduler is the component used to periodically kicks off tasks consumed by the worker. Use the following command to start it : $ opencve celery beat --loglevel=INFO The interval is set to 15 minutes . Tip You can start the worker as a background process with the -D or --detach option. The whole list of Celery's options can be displayed with the opencve celery beat -- --help command.","title":"celery beat"},{"location":"commands/#create-user","text":"OpenCVE users can be managed throught the CLI, using the create-user command : $ opencve create-user john john@example.com Password: Repeat for confirmation: [*] User john created. This is mandatory to create the very first admin : $ opencve create-user admin admin@example.com --admin Password: Repeat for confirmation: [*] User admin created. Note The CLI is only mandatory for the first admin, then you will be able to manage the users with the admin pages .","title":"create-user"},{"location":"commands/#import-data","text":"This command is used once, during OpenCVE installation, to populate the local database with all CVEs, CWEs, vendors and products : $ opencve import-data The following files are downloaded during the process : https://nvd.nist.gov/feeds/xml/cpe/dictionary/official-cpe-dictionary_v2.3.xml.gz https://cwe.mitre.org/data/xml/cwec_latest.xml.zip https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-{year}.json.gz Warning Because uncompressed files are parsed in memory, you must have enough RAM to handle the command. We wrote a dedicated section in the FAQ to use the disk space instead.","title":"import-data"},{"location":"commands/#init","text":"The init command is used to generate the OpenCVE's configuration file : $ opencve init [*] Configuration created in /Users/ncrocfer/opencve/opencve.cfg You can specify the target folder using the OPENCVE_HOME environment variable : $ export OPENCVE_HOME=\"/tmp/\" $ opencve init [*] Configuration created in /tmp/opencve.cfg You can also directly specify the configuration file with the OPENCVE_CONFIG : $ export OPENCVE_CONFIG=\"/tmp/config.cfg\" $ opencve init [*] Configuration created in /tmp/config.cfg","title":"init"},{"location":"commands/#upgrade-db","text":"This command handles the database operations, like tables and indexes creations : $ opencve upgrade-db Info You have to execute it during the installation process, but we also recommend you to launch it each time you upgrade OpenCVE, to automatically upgrade the database schema if needed.","title":"upgrade-db"},{"location":"commands/#webserver","text":"OpenCVE uses Gunicorn to handle the webserver : $ opencve webserver [2021-03-25 17:10:05 +0100] [29464] [INFO] Starting gunicorn 20.0.4 [2021-03-25 17:10:05 +0100] [29464] [INFO] Listening at: http://127.0.0.1:8000 (29464) [2021-03-25 17:10:05 +0100] [29464] [INFO] Using worker: sync [2021-03-25 17:10:05 +0100] [29470] [INFO] Booting worker with pid: 29470 You can find the list of options in Gunicorn's official documentation . For example the -b option can be used to bind another port : $ opencve webserver -b 0.0.0.0:8888 ... [2021-03-25 17:11:04 +0100] [29511] [INFO] Listening at: http://0.0.0.0:8080 (29511) ... Note Change the webserver's binding implies to also change the server_name configuration.","title":"webserver"},{"location":"faq/","text":"FAQ How to change the server name ? By default OpenCVE's webserver listens on 127.0.0.1:8000 , but you can easily change that. The first step is to set the server_name config of the opencve.cfg file (this setting is used by OpenCVE to correctly construct the URLs in the email templates): $ cat ~/opencve/opencve.cfg [core] server_name = 0.0.0.0:8080 ... Then you can use the -b option of the webserver command to choose your wanted binding: $ opencve webserver -b 0.0.0.0:8080 [2021-03-27 11:21:12 +0100] [57622] [INFO] Starting gunicorn 20.0.4 [2021-03-27 11:21:12 +0100] [57622] [INFO] Listening at: http://0.0.0.0:8080 (57622) [2021-03-27 11:21:12 +0100] [57622] [INFO] Using worker: sync [2021-03-27 11:21:12 +0100] [57676] [INFO] Booting worker with pid: 57676 Tip In fact the webserver command is just a wrapper on top of the gunicorn command, so you can use all the options provided by this WSGI server. How to use the disk space for the import-data command ? OpenCVE has to parse the CPE dictionnary to insert vendors and products in its PostgreSQL database, as well as the CVE and CWE list. Because the parsing is done in memory, the import-data command requires 5 GB RAM at least. If In case you don't have 5 GB RAM available and you have disk space, you can use a swap file to do the initial import of CVEs: $ fallocate -l 5G /swapfile $ chmod 600 /swapfile $ mkswap /swapfile $ swapon /swapfile When the import is done, you can clean the swapfile with the following commands: $ swapoff /swapfile $ rm /swapfile","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#how-to-change-the-server-name","text":"By default OpenCVE's webserver listens on 127.0.0.1:8000 , but you can easily change that. The first step is to set the server_name config of the opencve.cfg file (this setting is used by OpenCVE to correctly construct the URLs in the email templates): $ cat ~/opencve/opencve.cfg [core] server_name = 0.0.0.0:8080 ... Then you can use the -b option of the webserver command to choose your wanted binding: $ opencve webserver -b 0.0.0.0:8080 [2021-03-27 11:21:12 +0100] [57622] [INFO] Starting gunicorn 20.0.4 [2021-03-27 11:21:12 +0100] [57622] [INFO] Listening at: http://0.0.0.0:8080 (57622) [2021-03-27 11:21:12 +0100] [57622] [INFO] Using worker: sync [2021-03-27 11:21:12 +0100] [57676] [INFO] Booting worker with pid: 57676 Tip In fact the webserver command is just a wrapper on top of the gunicorn command, so you can use all the options provided by this WSGI server.","title":"How to change the server name ?"},{"location":"faq/#how-to-use-the-disk-space-for-the-import-data-command","text":"OpenCVE has to parse the CPE dictionnary to insert vendors and products in its PostgreSQL database, as well as the CVE and CWE list. Because the parsing is done in memory, the import-data command requires 5 GB RAM at least. If In case you don't have 5 GB RAM available and you have disk space, you can use a swap file to do the initial import of CVEs: $ fallocate -l 5G /swapfile $ chmod 600 /swapfile $ mkswap /swapfile $ swapon /swapfile When the import is done, you can clean the swapfile with the following commands: $ swapoff /swapfile $ rm /swapfile","title":"How to use the disk space for the import-data command ?"},{"location":"settings/","text":"Settings server_name The name and the port of OpenCVE server. Change it if you launch the webserver with a different value (see the related documentation for that). secret_key The key used for securely signing the session cookie (see the Flask recommandations ). database_uri The URI used by OpenCVE to connect to the database (see the SQLAlchemy Connection URI format ). OpenCVE only supports PostgreSQL . celery_broker_url The Celery Broker URL used to transport messages (ie redis://:password@host:port/db ). See the supported list of brokers on the Celery documentation . celery_result_backend The backend URL used by Celery to store task results (ie redis://:password@host:port/db ). See the supported list of backends on the Celery documentation . display_welcome Display the welcome page. If False the user will be redirected to the vulnerabilitites (CVE) page. If True the content of ~/opencve/welcome_html/index.html is displayed. display_terms Display the terms of service page. If True the content of ~/opencve/welcome_html/terms.html is displayed. cves_per_page Number of objects to display in the CVEs list (default: 20). vendors_per_page Number of objects to display in the vendors list (default: 20). products_per_page Number of objects to display in the products list (default: 20). cwes_per_page Number of objects to display in the CWEs list (default: 20). reports_per_page Number of objects to display in the reports list (default: 20). use_reverse_proxy Use the werkzeug middleware for reverse proxy (see the Werkzeug documentation ). display_recaptcha Display a reCAPTCHA form in register page. recaptcha_site_key The site key of recaptcha. recaptcha_secret_key The secret key of recaptcha. email_adapter The email adapter to use (choices are smtp or sendmail ). email_from The From field of the sent emails. smtp_server The server to use with SMTP adapter. smtp_port The server to use with SMTP adapter. smtp_use_tls Use TLS or not with SMTP adapter. smtp_username The username to use with SMTP adapter. smtp_password The password to use with SMTP adapter.","title":"Settings"},{"location":"settings/#settings","text":"","title":"Settings"},{"location":"settings/#server_name","text":"The name and the port of OpenCVE server. Change it if you launch the webserver with a different value (see the related documentation for that).","title":"server_name"},{"location":"settings/#secret_key","text":"The key used for securely signing the session cookie (see the Flask recommandations ).","title":"secret_key"},{"location":"settings/#database_uri","text":"The URI used by OpenCVE to connect to the database (see the SQLAlchemy Connection URI format ). OpenCVE only supports PostgreSQL .","title":"database_uri"},{"location":"settings/#celery_broker_url","text":"The Celery Broker URL used to transport messages (ie redis://:password@host:port/db ). See the supported list of brokers on the Celery documentation .","title":"celery_broker_url"},{"location":"settings/#celery_result_backend","text":"The backend URL used by Celery to store task results (ie redis://:password@host:port/db ). See the supported list of backends on the Celery documentation .","title":"celery_result_backend"},{"location":"settings/#display_welcome","text":"Display the welcome page. If False the user will be redirected to the vulnerabilitites (CVE) page. If True the content of ~/opencve/welcome_html/index.html is displayed.","title":"display_welcome"},{"location":"settings/#display_terms","text":"Display the terms of service page. If True the content of ~/opencve/welcome_html/terms.html is displayed.","title":"display_terms"},{"location":"settings/#cves_per_page","text":"Number of objects to display in the CVEs list (default: 20).","title":"cves_per_page"},{"location":"settings/#vendors_per_page","text":"Number of objects to display in the vendors list (default: 20).","title":"vendors_per_page"},{"location":"settings/#products_per_page","text":"Number of objects to display in the products list (default: 20).","title":"products_per_page"},{"location":"settings/#cwes_per_page","text":"Number of objects to display in the CWEs list (default: 20).","title":"cwes_per_page"},{"location":"settings/#reports_per_page","text":"Number of objects to display in the reports list (default: 20).","title":"reports_per_page"},{"location":"settings/#use_reverse_proxy","text":"Use the werkzeug middleware for reverse proxy (see the Werkzeug documentation ).","title":"use_reverse_proxy"},{"location":"settings/#display_recaptcha","text":"Display a reCAPTCHA form in register page.","title":"display_recaptcha"},{"location":"settings/#recaptcha_site_key","text":"The site key of recaptcha.","title":"recaptcha_site_key"},{"location":"settings/#recaptcha_secret_key","text":"The secret key of recaptcha.","title":"recaptcha_secret_key"},{"location":"settings/#email_adapter","text":"The email adapter to use (choices are smtp or sendmail ).","title":"email_adapter"},{"location":"settings/#email_from","text":"The From field of the sent emails.","title":"email_from"},{"location":"settings/#smtp_server","text":"The server to use with SMTP adapter.","title":"smtp_server"},{"location":"settings/#smtp_port","text":"The server to use with SMTP adapter.","title":"smtp_port"},{"location":"settings/#smtp_use_tls","text":"Use TLS or not with SMTP adapter.","title":"smtp_use_tls"},{"location":"settings/#smtp_username","text":"The username to use with SMTP adapter.","title":"smtp_username"},{"location":"settings/#smtp_password","text":"The password to use with SMTP adapter.","title":"smtp_password"},{"location":"api/","text":"Your own tools can interact with OpenCVE using its REST API. You can list the last CVEs per vendor, filter them by CVSS or analyse the changes in your reports. All the following endpoints are available under https://example.com/api . We also provide a running instance of OpenCVE, in this case the API can be found on https://www.opencve.io/api . Warning The OpenCVE API is still in Beta , some changes may appear until the stable version. Authentication We only support basic authentication for now, but we plan to add other ones like token based authentication. To use the Basic Authentication with the OpenCVE API, simply pass your credentials in the Authorization header. Most clients do it for you, for example using curl : curl -u username:password https://www.opencve.io/api/cve You can omit your password, curl will interactively ask you. Pagination Some endpoints can return lots of results (get the list of CVEs, the list of vendors, the list of reports, etc). In these cases the request must be paginated with the ?page parameter. Example with the list of CVEs: curl https://www.opencve.io/api/cve?page=100 When no result is found (the page parameter is too high), a 404 HTTP status code is returned. The default number of returned items per page in 20 . You can change it in your opencve.cfg file: cves_per_page = 20 vendors_per_page = 20 products_per_page = 20 cwes_per_page = 20 reports_per_page = 20 alerts_per_page = 20 Rate limit A rate limit can be applied using the [api] section of the opencve.cfg configuration file: [api] ; Enable the API ratelimit ratelimit_enabled = False ; Default value accross all API routes ; see https://flask-limiter.readthedocs.io/en/stable/#rate-limit-string-notation ratelimit_value = 3600/hour ; Ratelimit storage URI ; see https://limits.readthedocs.io/en/latest/storage.html ratelimit_storage_url = redis://127.0.0.1:6379/2 Tip The rate limit is shared between all API routes. When enabled, the API returned HTTP headers showing your current rate limit state: HTTP/1.0 200 OK Content-Type: application/json Content-Length: 9621 Date: Mon, 05 Apr 2021 13:18:21 GMT X-RateLimit-Limit: 3600 X-RateLimit-Remaining: 3596 X-RateLimit-Reset: 1617632265 Retry-After: 3563 Here are the explanations of these headers: Header Description X-RateLimit-Limit Total number of requests allowed in an hour. X-RateLimit-Remaining Number of requests remaining. X-RateLimit-Reset UTC seconds since epoch when the window will be reset. Retry-After Seconds to wait before the Rate Limit will be reset. Info A ratelimit of 1000 requests per hour and per user is applied on OpenCVE.io .","title":"Introduction"},{"location":"api/#authentication","text":"We only support basic authentication for now, but we plan to add other ones like token based authentication. To use the Basic Authentication with the OpenCVE API, simply pass your credentials in the Authorization header. Most clients do it for you, for example using curl : curl -u username:password https://www.opencve.io/api/cve You can omit your password, curl will interactively ask you.","title":"Authentication"},{"location":"api/#pagination","text":"Some endpoints can return lots of results (get the list of CVEs, the list of vendors, the list of reports, etc). In these cases the request must be paginated with the ?page parameter. Example with the list of CVEs: curl https://www.opencve.io/api/cve?page=100 When no result is found (the page parameter is too high), a 404 HTTP status code is returned. The default number of returned items per page in 20 . You can change it in your opencve.cfg file: cves_per_page = 20 vendors_per_page = 20 products_per_page = 20 cwes_per_page = 20 reports_per_page = 20 alerts_per_page = 20","title":"Pagination"},{"location":"api/#rate-limit","text":"A rate limit can be applied using the [api] section of the opencve.cfg configuration file: [api] ; Enable the API ratelimit ratelimit_enabled = False ; Default value accross all API routes ; see https://flask-limiter.readthedocs.io/en/stable/#rate-limit-string-notation ratelimit_value = 3600/hour ; Ratelimit storage URI ; see https://limits.readthedocs.io/en/latest/storage.html ratelimit_storage_url = redis://127.0.0.1:6379/2 Tip The rate limit is shared between all API routes. When enabled, the API returned HTTP headers showing your current rate limit state: HTTP/1.0 200 OK Content-Type: application/json Content-Length: 9621 Date: Mon, 05 Apr 2021 13:18:21 GMT X-RateLimit-Limit: 3600 X-RateLimit-Remaining: 3596 X-RateLimit-Reset: 1617632265 Retry-After: 3563 Here are the explanations of these headers: Header Description X-RateLimit-Limit Total number of requests allowed in an hour. X-RateLimit-Remaining Number of requests remaining. X-RateLimit-Reset UTC seconds since epoch when the window will be reset. Retry-After Seconds to wait before the Rate Limit will be reset. Info A ratelimit of 1000 requests per hour and per user is applied on OpenCVE.io .","title":"Rate limit"},{"location":"api/alerts/","text":"Alerts API GET /reports/<string:link>/alerts List the alerts of a report. Parameters: page (optional, default: 1): the page to start Example request: GET /api/reports/E8FBU53LDW8O/alerts HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [{ \"id\" : \"a7098731-ddca-4a40-9b0e-e7f513ce76ad\" , \"created_at\" : \"2021-04-01T19:40:29Z\" , \"cve\" : \"CVE-2020-27223\" , \"details\" : { \"products\" : [], \"vendors\" : [ \"apache\" ], \"filters\" : [ \"references\" ] } }] GET /reports/<string:link>/alerts/<string:id> Get the details of an alert. Example request: GET /api/reports/E8FBU53LDW8O/alerts/a7098731-ddca-4a40-9b0e-e7f513ce76ad HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [{ \"cve\" : \"CVE-2020-27223\" , \"type\" : \"references\" , \"details\" : { \"changed\" : [], \"added\" : [{ \"url\" : \"https://security.netapp.com/advisory/ntap-20210401-0005/\" , \"name\" : \"https://security.netapp.com/advisory/ntap-20210401-0005/\" , \"refsource\" : \"CONFIRM\" , \"tags\" : [] }], \"removed\" : [] } }]","title":"/alerts"},{"location":"api/alerts/#alerts-api","text":"","title":"Alerts API"},{"location":"api/alerts/#get-reportsstringlinkalerts","text":"List the alerts of a report. Parameters: page (optional, default: 1): the page to start Example request: GET /api/reports/E8FBU53LDW8O/alerts HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [{ \"id\" : \"a7098731-ddca-4a40-9b0e-e7f513ce76ad\" , \"created_at\" : \"2021-04-01T19:40:29Z\" , \"cve\" : \"CVE-2020-27223\" , \"details\" : { \"products\" : [], \"vendors\" : [ \"apache\" ], \"filters\" : [ \"references\" ] } }]","title":"GET /reports/&lt;string:link&gt;/alerts"},{"location":"api/alerts/#get-reportsstringlinkalertsstringid","text":"Get the details of an alert. Example request: GET /api/reports/E8FBU53LDW8O/alerts/a7098731-ddca-4a40-9b0e-e7f513ce76ad HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [{ \"cve\" : \"CVE-2020-27223\" , \"type\" : \"references\" , \"details\" : { \"changed\" : [], \"added\" : [{ \"url\" : \"https://security.netapp.com/advisory/ntap-20210401-0005/\" , \"name\" : \"https://security.netapp.com/advisory/ntap-20210401-0005/\" , \"refsource\" : \"CONFIRM\" , \"tags\" : [] }], \"removed\" : [] } }]","title":"GET /reports/&lt;string:link&gt;/alerts/&lt;string:id&gt;"},{"location":"api/cve/","text":"CVEs API GET /cve List the CVEs. Parameters: search (optional): filter by keyword in summary vendor (optional): filter by vendor name product (optional): filter by product name (implies vendor parameter) cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) cwe (optional): filter by CWE page (optional, default: 1): the page to start Example request: GET /api/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2021-1411\" , \"summary\" : \"Multiple vulnerabilities in Cisco Jabber for Windows, Cisco Jabber for MacOS, and Cisco Jabber for mobile platforms could allow an attacker to execute arbitrary programs on the underlying operating system with elevated privileges, access sensitive information, intercept protected network traffic, or cause a denial of service (DoS) condition. For more information about these vulnerabilities, see the Details section of this advisory.\" , \"created_at\" : \"2021-03-24T21:15:00Z\" , \"updated_at\" : \"2021-03-29T17:32:00Z\" }, ... ] GET /cve/<string:id> Get the details of a specific CVE. Example request: GET /api/cve/CVE-2021-1411 HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"id\" : \"CVE-2021-1411\" , \"summary\" : \"Multiple vulnerabilities in Cisco Jabber for Windows, Cisco Jabber for MacOS, and Cisco Jabber for mobile platforms could allow an attacker to execute arbitrary programs on the underlying operating system with elevated privileges, access sensitive information, intercept protected network traffic, or cause a denial of service (DoS) condition. For more information about these vulnerabilities, see the Details section of this advisory.\" , \"created_at\" : \"2021-03-24T21:15:00Z\" , \"updated_at\" : \"2021-03-29T17:32:00Z\" , \"cvss\" : { \"v2\" : 9.0 , \"v3\" : 9.9 }, \"vendors\" : { \"cisco\" : [ \"jabber\" ] }, \"cwes\" : [ \"CWE-170\" ], \"raw_nvd_data\" : { \"cve\" : { \"data_type\" : \"CVE\" , \"references\" : { \"reference_data\" : [{ \"url\" : \"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-cisco-jabber-PWrTATTC\" , \"name\" : \"20210324 Cisco Jabber Desktop and Mobile Client Software Vulnerabilities\" , \"tags\" : [ \"Vendor Advisory\" ], \"refsource\" : \"CISCO\" }] }, \"data_format\" : \"MITRE\" , \"description\" : { \"description_data\" : [{ \"lang\" : \"en\" , \"value\" : \"Multiple vulnerabilities in Cisco Jabber for Windows, Cisco Jabber for MacOS, and Cisco Jabber for mobile platforms could allow an attacker to execute arbitrary programs on the underlying operating system with elevated privileges, access sensitive information, intercept protected network traffic, or cause a denial of service (DoS) condition. For more information about these vulnerabilities, see the Details section of this advisory.\" }] }, \"problemtype\" : { \"problemtype_data\" : [{ \"description\" : [{ \"lang\" : \"en\" , \"value\" : \"CWE-170\" }] }] }, \"data_version\" : \"4.0\" , \"CVE_data_meta\" : { \"ID\" : \"CVE-2021-1411\" , \"ASSIGNER\" : \"cve@mitre.org\" } }, \"impact\" : { \"baseMetricV2\" : { \"cvssV2\" : { \"version\" : \"2.0\" , \"baseScore\" : 9.0 , \"accessVector\" : \"NETWORK\" , \"vectorString\" : \"AV:N/AC:L/Au:S/C:C/I:C/A:C\" , \"authentication\" : \"SINGLE\" , \"integrityImpact\" : \"COMPLETE\" , \"accessComplexity\" : \"LOW\" , \"availabilityImpact\" : \"COMPLETE\" , \"confidentialityImpact\" : \"COMPLETE\" }, \"severity\" : \"HIGH\" , \"acInsufInfo\" : false , \"impactScore\" : 10.0 , \"obtainAllPrivilege\" : false , \"exploitabilityScore\" : 8.0 , \"obtainUserPrivilege\" : false , \"obtainOtherPrivilege\" : false , \"userInteractionRequired\" : false }, \"baseMetricV3\" : { \"cvssV3\" : { \"scope\" : \"CHANGED\" , \"version\" : \"3.1\" , \"baseScore\" : 9.9 , \"attackVector\" : \"NETWORK\" , \"baseSeverity\" : \"CRITICAL\" , \"vectorString\" : \"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\" , \"integrityImpact\" : \"HIGH\" , \"userInteraction\" : \"NONE\" , \"attackComplexity\" : \"LOW\" , \"availabilityImpact\" : \"HIGH\" , \"privilegesRequired\" : \"LOW\" , \"confidentialityImpact\" : \"HIGH\" }, \"impactScore\" : 6.0 , \"exploitabilityScore\" : 3.1 } }, \"publishedDate\" : \"2021-03-24T21:15Z\" , \"configurations\" : { \"nodes\" : [{ \"operator\" : \"OR\" , \"cpe_match\" : [{ \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.1.5\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.5.4\" , \"versionStartIncluding\" : \"12.5.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.6.5\" , \"versionStartIncluding\" : \"12.6.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.7.4\" , \"versionStartIncluding\" : \"12.7.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.8.5\" , \"versionStartIncluding\" : \"12.8.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.9.5\" , \"versionStartIncluding\" : \"12.9.0\" } ] }], \"CVE_data_version\" : \"4.0\" }, \"lastModifiedDate\" : \"2021-03-29T17:32Z\" } }","title":"/cve"},{"location":"api/cve/#cves-api","text":"","title":"CVEs API"},{"location":"api/cve/#get-cve","text":"List the CVEs. Parameters: search (optional): filter by keyword in summary vendor (optional): filter by vendor name product (optional): filter by product name (implies vendor parameter) cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) cwe (optional): filter by CWE page (optional, default: 1): the page to start Example request: GET /api/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2021-1411\" , \"summary\" : \"Multiple vulnerabilities in Cisco Jabber for Windows, Cisco Jabber for MacOS, and Cisco Jabber for mobile platforms could allow an attacker to execute arbitrary programs on the underlying operating system with elevated privileges, access sensitive information, intercept protected network traffic, or cause a denial of service (DoS) condition. For more information about these vulnerabilities, see the Details section of this advisory.\" , \"created_at\" : \"2021-03-24T21:15:00Z\" , \"updated_at\" : \"2021-03-29T17:32:00Z\" }, ... ]","title":"GET /cve"},{"location":"api/cve/#get-cvestringid","text":"Get the details of a specific CVE. Example request: GET /api/cve/CVE-2021-1411 HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"id\" : \"CVE-2021-1411\" , \"summary\" : \"Multiple vulnerabilities in Cisco Jabber for Windows, Cisco Jabber for MacOS, and Cisco Jabber for mobile platforms could allow an attacker to execute arbitrary programs on the underlying operating system with elevated privileges, access sensitive information, intercept protected network traffic, or cause a denial of service (DoS) condition. For more information about these vulnerabilities, see the Details section of this advisory.\" , \"created_at\" : \"2021-03-24T21:15:00Z\" , \"updated_at\" : \"2021-03-29T17:32:00Z\" , \"cvss\" : { \"v2\" : 9.0 , \"v3\" : 9.9 }, \"vendors\" : { \"cisco\" : [ \"jabber\" ] }, \"cwes\" : [ \"CWE-170\" ], \"raw_nvd_data\" : { \"cve\" : { \"data_type\" : \"CVE\" , \"references\" : { \"reference_data\" : [{ \"url\" : \"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-cisco-jabber-PWrTATTC\" , \"name\" : \"20210324 Cisco Jabber Desktop and Mobile Client Software Vulnerabilities\" , \"tags\" : [ \"Vendor Advisory\" ], \"refsource\" : \"CISCO\" }] }, \"data_format\" : \"MITRE\" , \"description\" : { \"description_data\" : [{ \"lang\" : \"en\" , \"value\" : \"Multiple vulnerabilities in Cisco Jabber for Windows, Cisco Jabber for MacOS, and Cisco Jabber for mobile platforms could allow an attacker to execute arbitrary programs on the underlying operating system with elevated privileges, access sensitive information, intercept protected network traffic, or cause a denial of service (DoS) condition. For more information about these vulnerabilities, see the Details section of this advisory.\" }] }, \"problemtype\" : { \"problemtype_data\" : [{ \"description\" : [{ \"lang\" : \"en\" , \"value\" : \"CWE-170\" }] }] }, \"data_version\" : \"4.0\" , \"CVE_data_meta\" : { \"ID\" : \"CVE-2021-1411\" , \"ASSIGNER\" : \"cve@mitre.org\" } }, \"impact\" : { \"baseMetricV2\" : { \"cvssV2\" : { \"version\" : \"2.0\" , \"baseScore\" : 9.0 , \"accessVector\" : \"NETWORK\" , \"vectorString\" : \"AV:N/AC:L/Au:S/C:C/I:C/A:C\" , \"authentication\" : \"SINGLE\" , \"integrityImpact\" : \"COMPLETE\" , \"accessComplexity\" : \"LOW\" , \"availabilityImpact\" : \"COMPLETE\" , \"confidentialityImpact\" : \"COMPLETE\" }, \"severity\" : \"HIGH\" , \"acInsufInfo\" : false , \"impactScore\" : 10.0 , \"obtainAllPrivilege\" : false , \"exploitabilityScore\" : 8.0 , \"obtainUserPrivilege\" : false , \"obtainOtherPrivilege\" : false , \"userInteractionRequired\" : false }, \"baseMetricV3\" : { \"cvssV3\" : { \"scope\" : \"CHANGED\" , \"version\" : \"3.1\" , \"baseScore\" : 9.9 , \"attackVector\" : \"NETWORK\" , \"baseSeverity\" : \"CRITICAL\" , \"vectorString\" : \"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H\" , \"integrityImpact\" : \"HIGH\" , \"userInteraction\" : \"NONE\" , \"attackComplexity\" : \"LOW\" , \"availabilityImpact\" : \"HIGH\" , \"privilegesRequired\" : \"LOW\" , \"confidentialityImpact\" : \"HIGH\" }, \"impactScore\" : 6.0 , \"exploitabilityScore\" : 3.1 } }, \"publishedDate\" : \"2021-03-24T21:15Z\" , \"configurations\" : { \"nodes\" : [{ \"operator\" : \"OR\" , \"cpe_match\" : [{ \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.1.5\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.5.4\" , \"versionStartIncluding\" : \"12.5.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.6.5\" , \"versionStartIncluding\" : \"12.6.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.7.4\" , \"versionStartIncluding\" : \"12.7.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.8.5\" , \"versionStartIncluding\" : \"12.8.0\" }, { \"cpe23Uri\" : \"cpe:2.3:a:cisco:jabber:*:*:*:*:*:windows:*:*\" , \"vulnerable\" : true , \"versionEndExcluding\" : \"12.9.5\" , \"versionStartIncluding\" : \"12.9.0\" } ] }], \"CVE_data_version\" : \"4.0\" }, \"lastModifiedDate\" : \"2021-03-29T17:32Z\" } }","title":"GET /cve/&lt;string:id&gt;"},{"location":"api/cwe/","text":"CWEs API GET /cwe List the CWEs. Parameters: search (optional): filter by keyword page (optional, default: 1): the page to start Example request: GET /api/cwe HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CWE-79\" , \"name\" : \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\" , \"description\" : \"The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\" }, ... ] GET /cwe/<string:id> Get a specific CWE. Example request: GET /api/cwe/CWE-79 HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"id\" : \"CWE-79\" , \"name\" : \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\" , \"description\" : \"The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\" } GET /cwe/<string:id>/cve Get the list of CVEs associated to a CWE. Parameters: search (optional): filter by keyword in summary vendor (optional): filter by vendor name product (optional): filter by product name (implies vendor parameter) cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) page (optional, default: 1): the page to start Example request: GET /api/cwe/CWE-79/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2020-6816\" , \"summary\" : \"In Mozilla Bleach before 3.12, a mutation XSS in bleach.clean when RCDATA and either svg or math tags are whitelisted and the keyword argument strip=False.\" , \"created_at\" : \"2020-03-24T22:15:00Z\" , \"updated_at\" : \"2021-03-30T23:15:00Z\" }, ... ]","title":"/cwe"},{"location":"api/cwe/#cwes-api","text":"","title":"CWEs API"},{"location":"api/cwe/#get-cwe","text":"List the CWEs. Parameters: search (optional): filter by keyword page (optional, default: 1): the page to start Example request: GET /api/cwe HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CWE-79\" , \"name\" : \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\" , \"description\" : \"The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\" }, ... ]","title":"GET /cwe"},{"location":"api/cwe/#get-cwestringid","text":"Get a specific CWE. Example request: GET /api/cwe/CWE-79 HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"id\" : \"CWE-79\" , \"name\" : \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\" , \"description\" : \"The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\" }","title":"GET /cwe/&lt;string:id&gt;"},{"location":"api/cwe/#get-cwestringidcve","text":"Get the list of CVEs associated to a CWE. Parameters: search (optional): filter by keyword in summary vendor (optional): filter by vendor name product (optional): filter by product name (implies vendor parameter) cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) page (optional, default: 1): the page to start Example request: GET /api/cwe/CWE-79/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2020-6816\" , \"summary\" : \"In Mozilla Bleach before 3.12, a mutation XSS in bleach.clean when RCDATA and either svg or math tags are whitelisted and the keyword argument strip=False.\" , \"created_at\" : \"2020-03-24T22:15:00Z\" , \"updated_at\" : \"2021-03-30T23:15:00Z\" }, ... ]","title":"GET /cwe/&lt;string:id&gt;/cve"},{"location":"api/products/","text":"Products API GET /vendors/<string:vendor>/products List the products associated to a vendor. Parameters: search (optional): filter by keyword page (optional, default: 1): the page to start Example request: GET /api/vendors/wordpress/products HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"name\" : \"wordpress_mu\" , \"human_name\" : \"Wordpress Mu\" }, ... ] GET /vendors/<string:vendor>/products/<string:product> Get a specific product of a vendor. Example request: GET /api/vendors/wordpress/products/wordpress_mu HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"name\" : \"wordpress_mu\" , \"human_name\" : \"Wordpress Mu\" } GET /vendors/<string:vendor>/products/<string:product>/cve Get the list of CVEs associated to a product. Parameters: search (optional): filter by keyword in summary cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) cwe (optional): filter by CWE page (optional, default: 1): the page to start Example request: GET /api/vendors/wordpress/products/wordpress_mu/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2009-2335\" , \"summary\" : \"WordPress and WordPress MU before 2.8.1 exhibit different behavior for a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames. NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \\\"user convenience.\\\"\" , \"created_at\" : \"2009-07-10T21:00:00Z\" , \"updated_at\" : \"2018-11-08T20:38:00Z\" }, ... ]","title":"/products"},{"location":"api/products/#products-api","text":"","title":"Products API"},{"location":"api/products/#get-vendorsstringvendorproducts","text":"List the products associated to a vendor. Parameters: search (optional): filter by keyword page (optional, default: 1): the page to start Example request: GET /api/vendors/wordpress/products HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"name\" : \"wordpress_mu\" , \"human_name\" : \"Wordpress Mu\" }, ... ]","title":"GET /vendors/&lt;string:vendor&gt;/products"},{"location":"api/products/#get-vendorsstringvendorproductsstringproduct","text":"Get a specific product of a vendor. Example request: GET /api/vendors/wordpress/products/wordpress_mu HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"name\" : \"wordpress_mu\" , \"human_name\" : \"Wordpress Mu\" }","title":"GET /vendors/&lt;string:vendor&gt;/products/&lt;string:product&gt;"},{"location":"api/products/#get-vendorsstringvendorproductsstringproductcve","text":"Get the list of CVEs associated to a product. Parameters: search (optional): filter by keyword in summary cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) cwe (optional): filter by CWE page (optional, default: 1): the page to start Example request: GET /api/vendors/wordpress/products/wordpress_mu/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2009-2335\" , \"summary\" : \"WordPress and WordPress MU before 2.8.1 exhibit different behavior for a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames. NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \\\"user convenience.\\\"\" , \"created_at\" : \"2009-07-10T21:00:00Z\" , \"updated_at\" : \"2018-11-08T20:38:00Z\" }, ... ]","title":"GET /vendors/&lt;string:vendor&gt;/products/&lt;string:product&gt;/cve"},{"location":"api/reports/","text":"Reports API GET /reports List the reports of the authenticated user. Parameters: page (optional, default: 1): the page to start Example request: GET /api/reports HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"E8FBU53LDW8O\" , \"created_at\" : \"2021-04-01T19:40:30Z\" , \"details\" : [ \"apache\" ] }, ... ] GET /reports/<string:link> Get a specific report. Example request: GET /api/reports/E8FBU53LDW8O HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"id\" : \"E8FBU53LDW8O\" , \"created_at\" : \"2021-04-01T19:40:30Z\" , \"details\" : [ \"apache\" ], \"alerts\" : [{ \"id\" : \"a7098731-ddca-4a40-9b0e-e7f513ce76ad\" , \"created_at\" : \"2021-04-01T19:40:29Z\" , \"cve\" : \"CVE-2020-27223\" , \"details\" : { \"products\" : [], \"vendors\" : [ \"apache\" ], \"filters\" : [ \"references\" ] } }] }","title":"/reports"},{"location":"api/reports/#reports-api","text":"","title":"Reports API"},{"location":"api/reports/#get-reports","text":"List the reports of the authenticated user. Parameters: page (optional, default: 1): the page to start Example request: GET /api/reports HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"E8FBU53LDW8O\" , \"created_at\" : \"2021-04-01T19:40:30Z\" , \"details\" : [ \"apache\" ] }, ... ]","title":"GET /reports"},{"location":"api/reports/#get-reportsstringlink","text":"Get a specific report. Example request: GET /api/reports/E8FBU53LDW8O HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"id\" : \"E8FBU53LDW8O\" , \"created_at\" : \"2021-04-01T19:40:30Z\" , \"details\" : [ \"apache\" ], \"alerts\" : [{ \"id\" : \"a7098731-ddca-4a40-9b0e-e7f513ce76ad\" , \"created_at\" : \"2021-04-01T19:40:29Z\" , \"cve\" : \"CVE-2020-27223\" , \"details\" : { \"products\" : [], \"vendors\" : [ \"apache\" ], \"filters\" : [ \"references\" ] } }] }","title":"GET /reports/&lt;string:link&gt;"},{"location":"api/vendors/","text":"Vendors API GET /vendors List the vendors. Parameters: search (optional): filter by keyword letter (optional): filter by the first letter page (optional, default: 1): the page to start Example request: GET /api/vendors HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"name\" : \"wordpress\" , \"human_name\" : \"Wordpress\" }, ... ] GET /vendors/<string:name> Get a specific vendor. Example request: GET /api/vendors/wordpress HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"name\" : \"wordpress\" , \"human_name\" : \"Wordpress\" , \"products\" : [ \"adserve\" , \"alert_before_you_post\" , \"blix\" , \"blixed\" , \"blixkrieg\" , \"captcha\" , \"cryptographp\" , \"dean_logan_wp-people_plugin\" , \"download_monitor_plugin\" , \"fcchat_widget\" , \"fgallery_plugin\" , \"filemanager\" , \"lanoba_social_plugin\" , \"math_comment_spam_protection_plugin\" , \"page_flip_image_gallery_plugin\" , \"pay-with-tweet\" , \"permalinks_migration_plugin\" , \"peter\\\\'s_math_anti-spam_for_wordpress\" , \"photo_album_plugin\" , \"pictpress\" , \"plugin_newsletter_plugin\" , \"pool\" , \"search_unleashed_plugin\" , \"sirius\" , \"slideshow_gallery2\" , \"sniplets_plugin\" , \"spambam_plugin\" , \"st_newsletter_plugin\" , \"unamed_theme\" , \"unamed_theme_se\" , \"upload_file_plugin\" , \"wassup_plugin\" , \"wordpress\" , \"wordpress-users\" , \"wordpress_mu\" , \"wordpressclassic\" , \"wordspew\" , \"wp-contactform\" , \"wp-footnotes\" , \"wp_cal_plugin\" , \"wp_download\" , \"wp_downloads_manager\" , \"wp_forum\" , \"wp_maintenance_mode_plugin\" , \"wpss\" ] } GET /vendors/<string:name>/cve Get the list of CVEs associated to a vendor. Parameters: search (optional): filter by keyword in summary product (optional): filter by product name cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) cwe (optional): filter by CWE page (optional, default: 1): the page to start Example request: GET /api/vendors/wordpress/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2019-16223\" , \"summary\" : \"WordPress before 5.2.3 allows XSS in post previews by authenticated users.\" , \"created_at\" : \"2019-09-11T14:15:00Z\" , \"updated_at\" : \"2021-01-04T18:15:00Z\" }, ... ]","title":"/vendors"},{"location":"api/vendors/#vendors-api","text":"","title":"Vendors API"},{"location":"api/vendors/#get-vendors","text":"List the vendors. Parameters: search (optional): filter by keyword letter (optional): filter by the first letter page (optional, default: 1): the page to start Example request: GET /api/vendors HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"name\" : \"wordpress\" , \"human_name\" : \"Wordpress\" }, ... ]","title":"GET /vendors"},{"location":"api/vendors/#get-vendorsstringname","text":"Get a specific vendor. Example request: GET /api/vendors/wordpress HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK { \"name\" : \"wordpress\" , \"human_name\" : \"Wordpress\" , \"products\" : [ \"adserve\" , \"alert_before_you_post\" , \"blix\" , \"blixed\" , \"blixkrieg\" , \"captcha\" , \"cryptographp\" , \"dean_logan_wp-people_plugin\" , \"download_monitor_plugin\" , \"fcchat_widget\" , \"fgallery_plugin\" , \"filemanager\" , \"lanoba_social_plugin\" , \"math_comment_spam_protection_plugin\" , \"page_flip_image_gallery_plugin\" , \"pay-with-tweet\" , \"permalinks_migration_plugin\" , \"peter\\\\'s_math_anti-spam_for_wordpress\" , \"photo_album_plugin\" , \"pictpress\" , \"plugin_newsletter_plugin\" , \"pool\" , \"search_unleashed_plugin\" , \"sirius\" , \"slideshow_gallery2\" , \"sniplets_plugin\" , \"spambam_plugin\" , \"st_newsletter_plugin\" , \"unamed_theme\" , \"unamed_theme_se\" , \"upload_file_plugin\" , \"wassup_plugin\" , \"wordpress\" , \"wordpress-users\" , \"wordpress_mu\" , \"wordpressclassic\" , \"wordspew\" , \"wp-contactform\" , \"wp-footnotes\" , \"wp_cal_plugin\" , \"wp_download\" , \"wp_downloads_manager\" , \"wp_forum\" , \"wp_maintenance_mode_plugin\" , \"wpss\" ] }","title":"GET /vendors/&lt;string:name&gt;"},{"location":"api/vendors/#get-vendorsstringnamecve","text":"Get the list of CVEs associated to a vendor. Parameters: search (optional): filter by keyword in summary product (optional): filter by product name cvss (optional): filter by CVSS (one of none , low , medium , high , critical ) cwe (optional): filter by CWE page (optional, default: 1): the page to start Example request: GET /api/vendors/wordpress/cve HTTP/1.1 Host: example.com Accept: application/json Example response: HTTP/1.1 200 OK [ ... { \"id\" : \"CVE-2019-16223\" , \"summary\" : \"WordPress before 5.2.3 allows XSS in post previews by authenticated users.\" , \"created_at\" : \"2019-09-11T14:15:00Z\" , \"updated_at\" : \"2021-01-04T18:15:00Z\" }, ... ]","title":"GET /vendors/&lt;string:name&gt;/cve"},{"location":"installation/docker/","text":"Docker Installation The Docker installation is the method to choose if you want to quickly deploy OpenCVE without managing the dependencies (like PostgreSQL, Redis or Celery). Requirements The current documentation has been tested on Debian 10 and Ubuntu LTS 20.04 with the following requirements : Docker-compose 1.21.0+ Docker 20.10.1+ 5 GB RAM Configuration Get the OpenCVE docker repository: $ git clone https://github.com/opencve/opencve-docker.git Prepare and copy the configuration file from the conf directory: $ cd opencve-docker && cp ./conf/opencve.cfg.example ./conf/opencve.cfg Update the following keys in the opencve.cfg file: server_name (use the same port if you changed it in the .env file) secret_key (see the Flask recommandations ) smtp_server smtp_user & smtp_password if any or leave empty Tip If you want to change the default postgresql password (strongly advised), you can add it in the .env file before the docker-compose build: POSTGRES_PASSWORD=MyStrongPassword42 Then don't forget to change it in the opencve.cfg file. Info You will need a SMTP server to send the notification emails. Its configuration is out of scope of this procedure. Initialize the stack You can now build the OpenCVE image: $ docker-compose build Then start everything except the beat: $ docker-compose up -d postgres redis webserver celery_worker Initialize the database The database can be initialized with the following command: $ docker exec -it webserver opencve upgrade-db Import the data The tables are created, you can now populate them using the import-data command : $ docker exec -it webserver opencve import-data This command download the list of CPE, the list of CWE and each CVE's year (from 2002 until now), so it can take several minutes . Don't worry you will only do it once. Warning The NVD data are downloaded, extracted and then parsed in-memory before being inserted in the database. For that the import-data command needs 5GB at least to correctly do its job. Afterwards, the worker use very small memory as only the diff is used with the NVD. If you launch opencve import-data without this memory space the command will be killed (OOM) by your operating system and your data will be incompletes. We wrote a documentation to handle this problem using a SWAP file. Create an admin You can now create the admin : $ docker exec -it webserver opencve create-user john john.doe@example.com --admin Password: Repeat for confirmation: [*] User john created. Tip This command is required for the first admin, then you will be able to manage the users with the admin pages . Start the beat The last step is to start the scheduler : $ docker-compose up -d celery_beat You can now use OpenCVE with your own dockerized instance of it.","title":"Docker"},{"location":"installation/docker/#docker-installation","text":"The Docker installation is the method to choose if you want to quickly deploy OpenCVE without managing the dependencies (like PostgreSQL, Redis or Celery).","title":"Docker Installation"},{"location":"installation/docker/#requirements","text":"The current documentation has been tested on Debian 10 and Ubuntu LTS 20.04 with the following requirements : Docker-compose 1.21.0+ Docker 20.10.1+ 5 GB RAM","title":"Requirements"},{"location":"installation/docker/#configuration","text":"Get the OpenCVE docker repository: $ git clone https://github.com/opencve/opencve-docker.git Prepare and copy the configuration file from the conf directory: $ cd opencve-docker && cp ./conf/opencve.cfg.example ./conf/opencve.cfg Update the following keys in the opencve.cfg file: server_name (use the same port if you changed it in the .env file) secret_key (see the Flask recommandations ) smtp_server smtp_user & smtp_password if any or leave empty Tip If you want to change the default postgresql password (strongly advised), you can add it in the .env file before the docker-compose build: POSTGRES_PASSWORD=MyStrongPassword42 Then don't forget to change it in the opencve.cfg file. Info You will need a SMTP server to send the notification emails. Its configuration is out of scope of this procedure.","title":"Configuration"},{"location":"installation/docker/#initialize-the-stack","text":"You can now build the OpenCVE image: $ docker-compose build Then start everything except the beat: $ docker-compose up -d postgres redis webserver celery_worker","title":"Initialize the stack"},{"location":"installation/docker/#initialize-the-database","text":"The database can be initialized with the following command: $ docker exec -it webserver opencve upgrade-db","title":"Initialize the database"},{"location":"installation/docker/#import-the-data","text":"The tables are created, you can now populate them using the import-data command : $ docker exec -it webserver opencve import-data This command download the list of CPE, the list of CWE and each CVE's year (from 2002 until now), so it can take several minutes . Don't worry you will only do it once. Warning The NVD data are downloaded, extracted and then parsed in-memory before being inserted in the database. For that the import-data command needs 5GB at least to correctly do its job. Afterwards, the worker use very small memory as only the diff is used with the NVD. If you launch opencve import-data without this memory space the command will be killed (OOM) by your operating system and your data will be incompletes. We wrote a documentation to handle this problem using a SWAP file.","title":"Import the data"},{"location":"installation/docker/#create-an-admin","text":"You can now create the admin : $ docker exec -it webserver opencve create-user john john.doe@example.com --admin Password: Repeat for confirmation: [*] User john created. Tip This command is required for the first admin, then you will be able to manage the users with the admin pages .","title":"Create an admin"},{"location":"installation/docker/#start-the-beat","text":"The last step is to start the scheduler : $ docker-compose up -d celery_beat You can now use OpenCVE with your own dockerized instance of it.","title":"Start the beat"},{"location":"installation/manual/","text":"Manual Installation OpenCVE can simply be installed using pip : $ pip install opencve Configuration file OpenCVE uses an opencve.cfg file to handle its configuration (database access, mail config, pagination...). So the first step is to create this configuration file. You can do it with the init command : $ opencve init [*] Configuration created in /Users/ncrocfer/opencve/opencve.cfg Tip A custom path can be specified in the OPENCVE_CONFIG environment variable. Check the init documentation for more details. Initialize the database The database is configured with the database_uri variable of the opencve.cfg file : $ vim ~/opencve/opencve.cfg ... database_uri = postgresql://john:mysupersecret@servername:5432/opencve ... Once done the upgrade-db command will create all the tables : $ opencve upgrade-db Note Because it uses the JSONB feature for performance, OpenCVE only supports PostgreSQL. Import the data The tables are created, you can now populate them using the import-data command : $ opencve import-data This command download the list of CPE, the list of CWE and each CVE's year (from 2002 until now), so it can take several minutes . Don't worry you will only do it once. Warning The NVD data are downloaded, extracted and then parsed in-memory before being inserted in the database. For that the import-data command needs 5GB at least to correctly do its job. Afterwards, the worker use very small memory as only the diff is used with the NVD. If you launch opencve import-data without this memory space the command will be killed (OOM) by your operating system and your data will be incompletes. We wrote a documentation to handle this problem using a SWAP file. Start the workers The synchronization between the OpenCVE database and the CVE list is done using a periodic Celery task. The configuration of Celery is done through the celery_broker_url and the celery_result_backend configurations : $ vim ~/opencve/opencve.cfg ... celery_broker_url = redis://127.0.0.1:6379/0 celery_result_backend = redis://127.0.0.1:6379/1 ... Info Celery supports several transports, like Redis and RabbitMQ. You can find more information on the official documentation . The worker and the scheduler can then be started with the following commands : $ opencve celery worker -l INFO $ opencve celery beat -l INFO Create an admin You can now create the admin : $ opencve create-user john john.doe@example.com --admin Password: Repeat for confirmation: [*] User john created. Tip This command is required for the first admin, then you will be able to manage the users with the admin pages . Start the webserver You can finally launch the webserver and visit OpenCVE at http://127.0.0.1:8000 : $ opencve webserver [2020-07-14 20:38:06 +0200] [16032] [INFO] Starting gunicorn 20.0.4 [2020-07-14 20:38:06 +0200] [16032] [INFO] Listening at: http://127.0.0.1:8000 (16032) [2020-07-14 20:38:06 +0200] [16032] [INFO] Using worker: sync [2020-07-14 20:38:06 +0200] [16040] [INFO] Booting worker with pid: 16040 Tip The server name can be configured in the opencve.cfg file with the server_name variable. See the documentation for that.","title":"Manual"},{"location":"installation/manual/#manual-installation","text":"OpenCVE can simply be installed using pip : $ pip install opencve","title":"Manual Installation"},{"location":"installation/manual/#configuration-file","text":"OpenCVE uses an opencve.cfg file to handle its configuration (database access, mail config, pagination...). So the first step is to create this configuration file. You can do it with the init command : $ opencve init [*] Configuration created in /Users/ncrocfer/opencve/opencve.cfg Tip A custom path can be specified in the OPENCVE_CONFIG environment variable. Check the init documentation for more details.","title":"Configuration file"},{"location":"installation/manual/#initialize-the-database","text":"The database is configured with the database_uri variable of the opencve.cfg file : $ vim ~/opencve/opencve.cfg ... database_uri = postgresql://john:mysupersecret@servername:5432/opencve ... Once done the upgrade-db command will create all the tables : $ opencve upgrade-db Note Because it uses the JSONB feature for performance, OpenCVE only supports PostgreSQL.","title":"Initialize the database"},{"location":"installation/manual/#import-the-data","text":"The tables are created, you can now populate them using the import-data command : $ opencve import-data This command download the list of CPE, the list of CWE and each CVE's year (from 2002 until now), so it can take several minutes . Don't worry you will only do it once. Warning The NVD data are downloaded, extracted and then parsed in-memory before being inserted in the database. For that the import-data command needs 5GB at least to correctly do its job. Afterwards, the worker use very small memory as only the diff is used with the NVD. If you launch opencve import-data without this memory space the command will be killed (OOM) by your operating system and your data will be incompletes. We wrote a documentation to handle this problem using a SWAP file.","title":"Import the data"},{"location":"installation/manual/#start-the-workers","text":"The synchronization between the OpenCVE database and the CVE list is done using a periodic Celery task. The configuration of Celery is done through the celery_broker_url and the celery_result_backend configurations : $ vim ~/opencve/opencve.cfg ... celery_broker_url = redis://127.0.0.1:6379/0 celery_result_backend = redis://127.0.0.1:6379/1 ... Info Celery supports several transports, like Redis and RabbitMQ. You can find more information on the official documentation . The worker and the scheduler can then be started with the following commands : $ opencve celery worker -l INFO $ opencve celery beat -l INFO","title":"Start the workers"},{"location":"installation/manual/#create-an-admin","text":"You can now create the admin : $ opencve create-user john john.doe@example.com --admin Password: Repeat for confirmation: [*] User john created. Tip This command is required for the first admin, then you will be able to manage the users with the admin pages .","title":"Create an admin"},{"location":"installation/manual/#start-the-webserver","text":"You can finally launch the webserver and visit OpenCVE at http://127.0.0.1:8000 : $ opencve webserver [2020-07-14 20:38:06 +0200] [16032] [INFO] Starting gunicorn 20.0.4 [2020-07-14 20:38:06 +0200] [16032] [INFO] Listening at: http://127.0.0.1:8000 (16032) [2020-07-14 20:38:06 +0200] [16032] [INFO] Using worker: sync [2020-07-14 20:38:06 +0200] [16040] [INFO] Booting worker with pid: 16040 Tip The server name can be configured in the opencve.cfg file with the server_name variable. See the documentation for that.","title":"Start the webserver"}]}